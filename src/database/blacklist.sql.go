// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0
// source: blacklist.sql

package database

import (
	"context"
)

const getAllBlackListDomains = `-- name: GetAllBlackListDomains :many
SELECT domain FROM dm_blacklist
`

func (q *Queries) GetAllBlackListDomains(ctx context.Context, db DBTX) ([]string, error) {
	rows, err := db.QueryContext(ctx, getAllBlackListDomains)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []string
	for rows.Next() {
		var domain string
		if err := rows.Scan(&domain); err != nil {
			return nil, err
		}
		items = append(items, domain)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}

const getAllBlackListSubnets = `-- name: GetAllBlackListSubnets :many
SELECT subnet FROM sn_blacklist
`

func (q *Queries) GetAllBlackListSubnets(ctx context.Context, db DBTX) ([]string, error) {
	rows, err := db.QueryContext(ctx, getAllBlackListSubnets)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []string
	for rows.Next() {
		var subnet string
		if err := rows.Scan(&subnet); err != nil {
			return nil, err
		}
		items = append(items, subnet)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
